{"ast":null,"code":"import { products } from '../products';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../cart.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nfunction ProductDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 2);\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"P\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ProductDetailsComponent_div_2_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const product_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addToCart(product_r1));\n    });\n    i0.ɵɵtext(15, \"Buy\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(product_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", product_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Descripci\\u00F3n:\", product_r1.description, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Categoria: \", product_r1.category, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Precio: \", product_r1.price, \"\");\n  }\n}\nexport class ProductDetailsComponent {\n  constructor(route, cartService) {\n    this.route = route;\n    this.cartService = cartService;\n  }\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n  addToCart(product) {\n    this.cartService.addToCart(product);\n    window.alert('Your product has been added to the cart!');\n  }\n}\nProductDetailsComponent.ɵfac = function ProductDetailsComponent_Factory(t) {\n  return new (t || ProductDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CartService));\n};\nProductDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductDetailsComponent,\n  selectors: [[\"app-product-details\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"example-card\"], [\"mat-card-image\", \"\", 3, \"src\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function ProductDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Product Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ProductDetailsComponent_div_2_Template, 16, 5, \"div\", 0);\n      i0.ɵɵpipe(3, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.productos));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardImage, i4.MatCardTitle, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAkBA,QAAQ,QAAQ,aAAa;;;;;;;;;ICD/CC,2BAAiD;IAG3BA,YAAiB;IAAAA,iBAAiB;IAEpDA,yBAA0C;IAC1CA,wCAAkB;IACbA,YAAqC;IAAAA,iBAAI;IAE9CA,wCAAkB;IACbA,aAAgC;IAAAA,iBAAI;IACvCA,0BAAG;IAAAA,aAAyB;IAAAA,iBAAI;IAGpCA,kCAAmD;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAACA,oBAAG;IAAAA,iBAAS;;;;IAX3CA,eAAiB;IAAjBA,sCAAiB;IAEfA,eAAqB;IAArBA,mEAAqB;IAEpCA,eAAqC;IAArCA,sEAAqC;IAGrCA,eAAgC;IAAhCA,6DAAgC;IAChCA,eAAyB;IAAzBA,uDAAyB;;;ADDlC,OAAM,MAAOC,uBAAuB;EAIlCC,YACUC,KAAqB,EACrBC,WAAwB;IADxB,UAAK,GAALD,KAAK;IACL,gBAAW,GAAXC,WAAW;EAAiB;EAEtCC,QAAQ;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ;IAChD,MAAMC,kBAAkB,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACC,OAAO,GAAGb,QAAQ,CAACc,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,EAAE,KAAKL,kBAAkB,CAAC;EAC5E;EAEAM,SAAS,CAACH,OAAgB;IACxB,IAAI,CAACR,WAAW,CAACW,SAAS,CAACH,OAAO,CAAC;IACnCI,MAAM,CAACC,KAAK,CAAC,0CAA0C,CAAC;EAC1D;;AApBWhB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZpCtB,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MAExBA,yEAeM;;;;MAfqBA,eAAoB;MAApBA,6DAAoB","names":["products","i0","ProductDetailsComponent","constructor","route","cartService","ngOnInit","routeParams","snapshot","paramMap","productIdFromRoute","Number","get","product","find","id","addToCart","window","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\tarde\\Desktop\\Repositorio Local\\Angular\\miProyectoCarrito\\angular-e8bchu\\src\\app\\product-details\\product-details.component.ts","C:\\Users\\tarde\\Desktop\\Repositorio Local\\Angular\\miProyectoCarrito\\angular-e8bchu\\src\\app\\product-details\\product-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Product, products } from '../products';\nimport { CartService } from '../cart.service';\n\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: Product | undefined;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private cartService: CartService) { }\n\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n  \n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n\n  addToCart(product: Product) {\n    this.cartService.addToCart(product);\n    window.alert('Your product has been added to the cart!');\n  }\n\n}\n\n\n\n","<h2>Product Details</h2>\n\n<div *ngFor = \"let product of productos | async\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>{{product.title}}</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src={{product.image}}>\n    <mat-card-content>\n      <p>Descripción:{{ product.description }}</p>\n    </mat-card-content>\n    <mat-card-content>\n      <p>Categoria: {{ product.category}}</p>\n      <P>Precio: {{product.price}}</P>\n    </mat-card-content>\n  </mat-card>\n  <button type=\"button\" (click)=\"addToCart(product)\">Buy</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}